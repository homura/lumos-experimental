name: Release
on:
  push:
    branches: [develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  statuses: write
  checks: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: exit 0
  # TODO uncomment me when ready
  #  test:
  #    name: Verify
  #    secrets: inherit
  #    uses: ./.github/workflows/ci.yml

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/actions/install-deps

      # TODO remove me when ready
      - name: Release to Verdaccio
        run: |
          npm install -g verdaccio
          npm config set registry http://localhost:4873
          npm config set //localhost:4873/:_authToken fake
          nohup verdaccio --config ./devtools/verdaccio.yaml --listen=4873 >/dev/null 2>&1 &

      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR

      - name: Set publish env
        run: |
          CURRENT_VERSION=$(node -p 'require("./packages/lumos/package.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> "$GITHUB_ENV"
          PRERELEASE=$(node -p 'require("./packages/lumos/package.json").version.includes("-")')
          echo "PRERELEASE=${PRERELEASE}" >> "$GITHUB_ENV"
          echo "SHOULD_PUBLISH=${{ steps.PR.outputs.pr_found == 'true' &&
            contains(steps.PR.outputs.pr_merged_at, '-') == 'true' &&
            contains(steps.PR.outputs.pr_title, 'Version Packages') == 'true' }}" >> "$GITHUB_ENV"

      - name: Publish to NPM
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        id: publish
        run: |
          pnpm publish -r --tag ${{ env.PRERELEASE == 'true' && 'next' || 'latest' }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git tag v${{ env.CURRENT_VERSION }}

      - name: Push tag to GitHub
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: releases/v${{ env.CURRENT_VERSION }}
          tags: true

      - name: Changelog
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        id: changelog
        uses: ashley-taylor/regex-property-action@v1.3
        with:
          value: ${{ steps.PR.outputs.pr_body }}
          regex: "([\\s\\S]*)(# Releases)"
          replacement: "$2"

      - uses: ncipollo/release-action@v1
        if: ${{ env.SHOULD_PUBLISH == 'true' }}
        with:
          tag: v${{ env.CURRENT_VERSION }}
          prerelease: ${{ env.PRERELEASE == 'true' && 'true' || 'false' }}
          body: ${{ steps.changelog.outputs.value }}
